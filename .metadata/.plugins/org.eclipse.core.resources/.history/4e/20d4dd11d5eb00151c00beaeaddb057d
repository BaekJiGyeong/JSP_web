package com.ktds.jgbaek.member.biz;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import com.ktds.jgbaek.article.vo.ArticleVO;
import com.ktds.jgbaek.member.dao.MemberDAO;
import com.ktds.jgbaek.member.vo.MemberVO;

public class MemberBiz {

	private MemberDAO memberDAO;

	public MemberBiz() {
		memberDAO = new MemberDAO();

	}

	public boolean login(MemberVO member, HttpServletRequest request) {

		// 1. 회원 정보를 가져온다.
		MemberVO loginMember = memberDAO.getMemberByIdAndPassword(member);

		// 2. 회원 정보가 존재한다면, 세션에 집어 넣는다.
		// 세션은 request가 가지고 있따.
		if (loginMember != null) {
			HttpSession session = request.getSession();
			session.setAttribute("_MEMBER_", loginMember); // _MEMBER_ 세션 명명 규칙
		}

		// 3. 결과를 보고한다.
		return loginMember != null;

	}

	public boolean addNewMember(MemberVO member) {
		// 1. 중복아이디가 있는지 확인 한다.
		List<MemberVO> members = memberDAO.getAllMember();
		for (MemberVO memberVO : members) {
			if (memberVO.getMemberId().equals(member.getMemberId())) {
				return false;
			}
		}
		// 2. 빈칸이 있는지 확인 한다.

		// 3. 회원 정보를 등록한다.
		MemberVO addMember = memberDAO.addNewMember(member);
		// 4. 결과를 보고한다.
		return addMember != null;
	}

	public void logout(MemberVO member, HttpServletRequest request) {

		// 2. 회원 정보가 존재한다면, 세션에 집어 넣는다.
		// 세션은 request가 가지고 있따.
		if (member != null) {
			HttpSession session = request.getSession();
			session.invalidate();
		}
	}

	public List<MemberVO> getAllMember() {
		return memberDAO.getAllMember();
	}

	public void deleteMembers(String[] deleteMemberIds, MemberVO member) {
		if (member.isAdmin()) {
			for (String memberId : deleteMemberIds) {
				memberDAO.deleteMember(memberId);
			}
		}

	}

	public MemberVO getOneMemberByMemberId(String memberId) {
		MemberVO member = memberDAO.getOneMemberByMemberId(memberId);
		return member;
	}

	public boolean modifyMember(HttpServletRequest request) {
		String memberId = request.getParameter("memberId");
		MemberVO member = this.getOneMemberByMemberId(memberId);

		int changeCount = 0;
		String nickName = request.getParameter("nickName");
		String password = request.getParameter("password");
		String email = request.getParameter("email");
		String isAdmin = request.getParameter("isAdmin");

		MemberVO changeMember = new MemberVO();
		if (!member.getNickName().equals(nickName)) {
			changeCount++;
			changeMember.setNickName(nickName);
		}
		if (!member.getPassword().equals(password)) {
			changeCount++;
			changeMember.setPassword(password);
		}
		if (!member.getEmail().equals(email)) {
			changeCount++;
			changeMember.setEmail(email);
		}
		if (!member.getIsAdmin().equals(isAdmin)) {
			changeCount++;
			changeMember.setIsAdmin(isAdmin);
		}

		if (changeCount == 0) {
			throw new RuntimeException("변경된 사항이 없습니다.");
		} else {
			changeMember.setMemberId(memberId);
			return memberDAO.updateMember(changeMember) > 0;
		}
		
	}
}
